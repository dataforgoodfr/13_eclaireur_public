name: BackstopJS Visual Regression Tests

on:
  push:
    branches: [main, develop]
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches: [main, develop]
    paths:
      - "front/**"
      - "!front/**/*.md"
      - "!front/backstop_data/bitmaps_test/**"
      - "!front/backstop_data/html_report/**"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Job 1: Vérification rapide des caches et préparation
  setup:
    runs-on: ubuntu-latest
    outputs:
      node-cache-hit: ${{ steps.node-cache.outputs.cache-hit }}
      storybook-cache-hit: ${{ steps.storybook-cache.outputs.cache-hit }}
    steps:
      - name: Checkout repository (sparse)
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event_name == 'workflow_dispatch' && github.repository || github.event.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event_name == 'workflow_dispatch' && github.ref || github.event.pull_request.head.ref || github.ref }}
          sparse-checkout: |
            front/package.json
            front/yarn.lock

      - name: Check node_modules cache
        id: node-cache
        uses: actions/cache@v4
        with:
          path: front/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('front/yarn.lock') }}
          lookup-only: true

      - name: Check Storybook cache
        id: storybook-cache
        uses: actions/cache@v4
        with:
          path: front/storybook-static
          key: ${{ runner.os }}-storybook-${{ hashFiles('front/**/*.{js,jsx,ts,tsx}', '!front/**/*.test.*', '!front/**/*.stories.*') }}
          lookup-only: true

  # Job 2: Installation des dépendances (si nécessaire)
  install-dependencies:
    needs: setup
    if: needs.setup.outputs.node-cache-hit != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event_name == 'workflow_dispatch' && github.repository || github.event.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event_name == 'workflow_dispatch' && github.ref || github.event.pull_request.head.ref || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "yarn"
          cache-dependency-path: "front/yarn.lock"

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: front/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('front/yarn.lock') }}

      - name: Install dependencies
        run: |
          cd front
          yarn install --frozen-lockfile --network-concurrency 1

  # Job 3: Build Storybook (en parallèle avec l'installation si cache hit)
  build-storybook:
    needs: [setup, install-dependencies]
    if: |
      always() && 
      needs.setup.outputs.storybook-cache-hit != 'true' &&
      (needs.install-dependencies.result == 'success' || needs.install-dependencies.result == 'skipped')
    runs-on: ubuntu-latest
    env:
      CLEVER_SECRET: ${{ secrets.CLEVER_SECRET }}
      CLEVER_TOKEN: ${{ secrets.CLEVER_TOKEN }}
      ORGA_ID: ${{ secrets.ORGA_ID }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_APP_FOLDER: ${{ secrets.APP_FOLDER }}
      GH_CC_CACHE_DEPENDENCIES: ${{ secrets.CC_CACHE_DEPENDENCIES }}
      GH_CC_CGI_IMPLEMENTATION: ${{ secrets.CC_CGI_IMPLEMENTATION }}
      GH_CC_NODE_DEV_DEPENDENCIES: ${{ secrets.CC_NODE_DEV_DEPENDENCIES }}
      GH_CC_WEBROOT: ${{ secrets.CC_WEBROOT }}
      GH_HOST: ${{ secrets.HOST }}
      GH_NODE_ENV: ${{ secrets.NODE_ENV }}
      GH_PORT: ${{ secrets.PORT }}
      NEXT_PUBLIC_BASE_URL: http://localhost:3000
      NEXT_PUBLIC_MAPTILES_API_KEY: ${{ secrets.NEXT_PUBLIC_MAPTILES_API_KEY }}
      POSTGRESQL_ADDON_HOST: ${{ secrets.POSTGRESQL_ADDON_HOST }}
      POSTGRESQL_ADDON_DB: ${{ secrets.POSTGRESQL_ADDON_DB }}
      POSTGRESQL_ADDON_USER: ${{ secrets.POSTGRESQL_ADDON_USER }}
      POSTGRESQL_ADDON_PORT: ${{ secrets.POSTGRESQL_ADDON_PORT }}
      POSTGRESQL_ADDON_PASSWORD: ${{ secrets.POSTGRESQL_ADDON_PASSWORD }}
      POSTGRESQL_ADDON_URI: ${{ secrets.POSTGRESQL_ADDON_URI }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event_name == 'workflow_dispatch' && github.repository || github.event.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event_name == 'workflow_dispatch' && github.ref || github.event.pull_request.head.ref || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: front/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('front/yarn.lock') }}

      - name: Cache Storybook build
        uses: actions/cache@v4
        with:
          path: front/storybook-static
          key: ${{ runner.os }}-storybook-${{ hashFiles('front/**/*.{js,jsx,ts,tsx}', '!front/**/*.test.*', '!front/**/*.stories.*') }}

      - name: Build Storybook
        env:
          NODE_OPTIONS: "--max-old-space-size=2048"
        run: |
          cd front
          yarn storybook:build

      - name: Upload Storybook artifact
        uses: actions/upload-artifact@v4
        with:
          name: storybook-static
          path: front/storybook-static
          retention-days: 1

  # Job 4: Installation de Playwright (en parallèle)
  install-playwright:
    needs: [setup, install-dependencies]
    if: |
      always() && 
      (needs.install-dependencies.result == 'success' || needs.install-dependencies.result == 'skipped')
    runs-on: ubuntu-latest
    steps:
      - name: Cache Playwright browsers
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('front/yarn.lock') }}

      - name: Install Playwright if needed
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          npx playwright install --with-deps chromium

  # Job 5: Tests visuels
  visual-regression:
    needs: [setup, install-dependencies, build-storybook, install-playwright]
    if: |
      always() && 
      (needs.install-dependencies.result == 'success' || needs.install-dependencies.result == 'skipped') &&
      (needs.build-storybook.result == 'success' || needs.build-storybook.result == 'skipped') &&
      needs.install-playwright.result == 'success'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
      pull-requests: write
    env:
      CLEVER_SECRET: ${{ secrets.CLEVER_SECRET }}
      CLEVER_TOKEN: ${{ secrets.CLEVER_TOKEN }}
      ORGA_ID: ${{ secrets.ORGA_ID }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_APP_FOLDER: ${{ secrets.APP_FOLDER }}
      GH_CC_CACHE_DEPENDENCIES: ${{ secrets.CC_CACHE_DEPENDENCIES }}
      GH_CC_CGI_IMPLEMENTATION: ${{ secrets.CC_CGI_IMPLEMENTATION }}
      GH_CC_NODE_DEV_DEPENDENCIES: ${{ secrets.CC_NODE_DEV_DEPENDENCIES }}
      GH_CC_WEBROOT: ${{ secrets.CC_WEBROOT }}
      GH_HOST: ${{ secrets.HOST }}
      GH_NODE_ENV: ${{ secrets.NODE_ENV }}
      GH_PORT: ${{ secrets.PORT }}
      NEXT_PUBLIC_BASE_URL: http://localhost:3000
      NEXT_PUBLIC_MAPTILES_API_KEY: ${{ secrets.NEXT_PUBLIC_MAPTILES_API_KEY }}
      POSTGRESQL_ADDON_HOST: ${{ secrets.POSTGRESQL_ADDON_HOST }}
      POSTGRESQL_ADDON_DB: ${{ secrets.POSTGRESQL_ADDON_DB }}
      POSTGRESQL_ADDON_USER: ${{ secrets.POSTGRESQL_ADDON_USER }}
      POSTGRESQL_ADDON_PORT: ${{ secrets.POSTGRESQL_ADDON_PORT }}
      POSTGRESQL_ADDON_PASSWORD: ${{ secrets.POSTGRESQL_ADDON_PASSWORD }}
      POSTGRESQL_ADDON_URI: ${{ secrets.POSTGRESQL_ADDON_URI }}
    outputs:
      has-diffs: ${{ steps.detect-diffs.outputs.diffs }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event_name == 'workflow_dispatch' && github.repository || github.event.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event_name == 'workflow_dispatch' && github.ref || github.event.pull_request.head.ref || github.ref }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: front/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('front/yarn.lock') }}

      - name: Restore Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('front/yarn.lock') }}

      - name: Download or restore Storybook
        run: |
          if [ "${{ needs.setup.outputs.storybook-cache-hit }}" == "true" ]; then
            echo "Using cached Storybook"
          else
            echo "Downloading Storybook artifact"
          fi
        
      - name: Restore Storybook from cache if available
        if: needs.setup.outputs.storybook-cache-hit == 'true'
        uses: actions/cache@v4
        with:
          path: front/storybook-static
          key: ${{ runner.os }}-storybook-${{ hashFiles('front/**/*.{js,jsx,ts,tsx}', '!front/**/*.test.*', '!front/**/*.stories.*') }}

      - name: Download Storybook artifact if built
        if: needs.setup.outputs.storybook-cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: storybook-static
          path: front/storybook-static

      - name: Serve Storybook
        run: |
          cd front
          npx http-server ./storybook-static -p 6006 > /dev/null 2>&1 &
          npx wait-on http://localhost:6006/iframe.html

      - name: Run BackstopJS tests
        id: detect-diffs
        run: |
          cd front
          yarn backstop:test && echo "diffs=false" >> $GITHUB_OUTPUT || echo "diffs=true" >> $GITHUB_OUTPUT

      - name: Upload BackstopJS complete report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backstop-complete-report
          path: front/backstop_data/
          retention-days: 30

      - name: Upload report artifact for deployment
        if: steps.detect-diffs.outputs.diffs == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: gh-pages-artifact-index
          path: front/backstop_data/html_report/
          retention-days: 1

      - name: Upload reference artifact for deployment
        if: steps.detect-diffs.outputs.diffs == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: gh-pages-artifact-reference
          path: front/backstop_data/bitmaps_reference/
          retention-days: 1

      - name: Upload tests artifact for deployment
        if: steps.detect-diffs.outputs.diffs == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: gh-pages-artifact-tests
          path: front/backstop_data/bitmaps_test/
          retention-days: 1

      - name: Comment PR with report link
        if: |
          steps.detect-diffs.outputs.diffs == 'true' && 
          github.event_name == 'pull_request_target' && 
          github.event.pull_request.number
        uses: actions/github-script@v7
        with:
          script: |
            const branchSafe = (context.payload.pull_request.head.ref || context.ref).replace(/\//g, "-");
            const pagesUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/reports/${branchSafe}/html_report`;
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const comment = `## 📸 Visual Regression Test Results
            ⚠️ Visual differences detected
            ### 📊 Test Artifacts
            - 🔗 **[BackstopJS Complete Report](${pagesUrl})** – View live report
            - 🧾 **[Workflow Artifacts](${runUrl}#artifacts)**
            ### 📋 Report Includes:
            - Visual comparisons (reference vs. test)
            - Highlighted diffs
            - Interactive viewer
            🕒 Artifacts are retained for 30 days.`;
            await github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Notify if tests failed
        if: failure() && github.event_name == 'pull_request_target' && github.event.pull_request.number
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "❌ Visual regression tests failed. Please check the workflow logs for details."
            });

  # Job 6: Approbation des références (après merge)
  approve-backstop:
    needs: visual-regression
    if: |
      github.event_name == 'push' &&
      github.event.pull_request.merged == true &&
      github.event.action == 'closed' &&
      (github.event.pull_request.base.ref == 'main' || github.event.pull_request.base.ref == 'develop')
    runs-on: ubuntu-latest
    env:
      CLEVER_SECRET: ${{ secrets.CLEVER_SECRET }}
      CLEVER_TOKEN: ${{ secrets.CLEVER_TOKEN }}
      ORGA_ID: ${{ secrets.ORGA_ID }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_APP_FOLDER: ${{ secrets.APP_FOLDER }}
      GH_CC_CACHE_DEPENDENCIES: ${{ secrets.CC_CACHE_DEPENDENCIES }}
      GH_CC_CGI_IMPLEMENTATION: ${{ secrets.CC_CGI_IMPLEMENTATION }}
      GH_CC_NODE_DEV_DEPENDENCIES: ${{ secrets.CC_NODE_DEV_DEPENDENCIES }}
      GH_CC_WEBROOT: ${{ secrets.CC_WEBROOT }}
      GH_HOST: ${{ secrets.HOST }}
      GH_NODE_ENV: ${{ secrets.NODE_ENV }}
      GH_PORT: ${{ secrets.PORT }}
      NEXT_PUBLIC_BASE_URL: http://localhost:3000
      NEXT_PUBLIC_MAPTILES_API_KEY: ${{ secrets.NEXT_PUBLIC_MAPTILES_API_KEY }}
      POSTGRESQL_ADDON_HOST: ${{ secrets.POSTGRESQL_ADDON_HOST }}
      POSTGRESQL_ADDON_DB: ${{ secrets.POSTGRESQL_ADDON_DB }}
      POSTGRESQL_ADDON_USER: ${{ secrets.POSTGRESQL_ADDON_USER }}
      POSTGRESQL_ADDON_PORT: ${{ secrets.POSTGRESQL_ADDON_PORT }}
      POSTGRESQL_ADDON_PASSWORD: ${{ secrets.POSTGRESQL_ADDON_PASSWORD }}
      POSTGRESQL_ADDON_URI: ${{ secrets.POSTGRESQL_ADDON_URI }}
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "yarn"
          cache-dependency-path: "front/yarn.lock"

      - name: Cache node_modules
        uses: actions/cache@v4
        id: node-modules-cache-approve
        with:
          path: front/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('front/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        if: steps.node-modules-cache-approve.outputs.cache-hit != 'true'
        run: |
          cd front
          yarn install --frozen-lockfile

      - name: Approve BackstopJS references
        run: |
          cd front
          yarn backstop:approve

      - name: Commit and push approved references
        run: |
          cd front
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add backstop_data/bitmaps_reference
          git commit -m "chore: approve BackstopJS references post-merge [skip ci]" || echo "No changes to commit"
          git push

  # Job 7: Déploiement GitHub Pages (peut s'exécuter en parallèle)
  deploy-pages:
    needs: visual-regression
    if: |
      always() && 
      needs.visual-regression.outputs.has-diffs == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    environment:
      name: github-pages
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download report artifact
        uses: actions/download-artifact@v4
        with:
          name: gh-pages-artifact-index
          path: ./report-temp/html_report

      - name: Download reference artifact
        uses: actions/download-artifact@v4
        with:
          name: gh-pages-artifact-reference
          path: ./report-temp/bitmaps_reference

      - name: Download test artifact
        uses: actions/download-artifact@v4
        with:
          name: gh-pages-artifact-tests
          path: ./report-temp/bitmaps_test

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Deploy report to branch directory
        run: |
          BRANCH_SAFE_NAME=$(echo "${{ github.head_ref || github.ref_name }}" | sed 's|/|-|g')
          mkdir -p ./reports/$BRANCH_SAFE_NAME
          cp -r ./report-temp/* ./reports/$BRANCH_SAFE_NAME/
          git add ./reports/$BRANCH_SAFE_NAME
          git commit -m "chore: deploy BackstopJS report for ${{ github.head_ref || github.ref_name }}" || echo "No changes to commit"
          git push origin gh-pages

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4