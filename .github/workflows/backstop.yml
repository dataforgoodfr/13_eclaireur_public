name: BackstopJS Visual Regression Tests
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  visual-regression:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
      pull-requests: write

    env:
      CLEVER_SECRET: ${{ secrets.CLEVER_SECRET }}
      CLEVER_TOKEN: ${{ secrets.CLEVER_TOKEN }}
      ORGA_ID: ${{ secrets.ORGA_ID }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_APP_FOLDER: ${{ secrets.APP_FOLDER }}
      GH_CC_CACHE_DEPENDENCIES: ${{ secrets.CC_CACHE_DEPENDENCIES }}
      GH_CC_CGI_IMPLEMENTATION: ${{ secrets.CC_CGI_IMPLEMENTATION }}
      GH_CC_NODE_DEV_DEPENDENCIES: ${{ secrets.CC_NODE_DEV_DEPENDENCIES }}
      GH_CC_WEBROOT: ${{ secrets.CC_WEBROOT }}
      GH_HOST: ${{ secrets.HOST }}
      GH_NODE_ENV: ${{ secrets.NODE_ENV }}
      GH_PORT: ${{ secrets.PORT }}
      NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
      NEXT_PUBLIC_MAPTILES_API_KEY: ${{ secrets.NEXT_PUBLIC_MAPTILES_API_KEY }}
      POSTGRESQL_ADDON_HOST: ${{ secrets.POSTGRESQL_ADDON_HOST }}
      POSTGRESQL_ADDON_DB: ${{ secrets.POSTGRESQL_ADDON_DB }}
      POSTGRESQL_ADDON_USER: ${{ secrets.POSTGRESQL_ADDON_USER }}
      POSTGRESQL_ADDON_PORT: ${{ secrets.POSTGRESQL_ADDON_PORT }}
      POSTGRESQL_ADDON_PASSWORD: ${{ secrets.POSTGRESQL_ADDON_PASSWORD }}
      POSTGRESQL_ADDON_URI: ${{ secrets.POSTGRESQL_ADDON_URI }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "yarn"
          cache-dependency-path: "front/yarn.lock"

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: |
          cd front
          yarn install --frozen-lockfile

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          cd front
          yarn playwright install --with-deps chromium

      - name: Build Storybook
        id: build-storybook
        run: |
          cd front
          yarn storybook:build

      - name: Serve Storybook
        id: storybook-server
        run: |
          cd front
          npx http-server ./storybook-static -p 6006 > /dev/null 2>&1 &
          npx wait-on http://localhost:6006/iframe.html

      - name: Run BackstopJS tests
        id: backstop-test
        run: |
          cd front
          yarn backstop:test || (echo "::warning::Visual differences detected" && true)

      - name: Upload BackstopJS report
        if: steps.storybook-server.outcome == 'success' && steps.backstop-test.outcome != 'failed'
        uses: actions/upload-artifact@v4
        with:
          name: backstop-report
          path: front/backstop_data/html_report/
          retention-days: 30

      - name: Upload BackstopJS test results
        if: steps.storybook-server.outcome == 'success' && steps.backstop-test.outcome != 'failed'
        uses: actions/upload-artifact@v4
        with:
          name: backstop-test-results
          path: front/backstop_data/bitmaps_test/
          retention-days: 30

      - name: Deploy BackstopJS Report to GitHub Pages
        if: steps.storybook-server.outcome == 'success' && steps.backstop-test.outcome != 'failed' && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: front/backstop_data/html_report
          destination_dir: backstop-reports/${{ github.run_number }}

      - name: Comment PR with report link
        if: steps.storybook-server.outcome == 'success' && steps.backstop-test.outcome != 'failed' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const reportUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/backstop-reports/${context.runNumber}/`;
            const hasDiffs = "${{ steps.backstop-test.outcome == 'failure' }}";
            const comment = `
            ## üì∏ Visual Regression Test Results
            ${hasDiffs === 'true' ? '‚ö†Ô∏è Visual differences detected' : '‚úÖ All visual tests passed'}

            üîó **[View BackstopJS Report](${reportUrl})**

            ${hasDiffs === 'true' ? 
              "**Note:** This is not a failure - the report shows visual differences that need review." : ""}


            Report includes:
            - Visual comparisons between reference and test images
            - Detailed diff highlighting
            - Interactive browser for reviewing scenarios


            Available for 30 days.`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
      - name: Notify if Storybook failed
        if: steps.storybook-server.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "‚ùå Visual regression tests failed because the Storybook server could not start. Check the workflow logs for details."
            });
